// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.Web.DataAccess.Postgres;

#nullable disable

namespace Shop.Web.DataAccess.Postgres.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220628153250_Data")]
    partial class Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.Models.OrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shop.Web.DataAccess.Postgres.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e80a596-02e7-4892-ac45-6cb8f01c0cf1"),
                            AggregateId = new Guid("efa9a19c-a85b-41f5-af21-bb27776986aa"),
                            CreatedAt = new DateTime(2022, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Data = "{\"Id\":\"efa9a19c-a85b-41f5-af21-bb27776986aa\",\"FirstName\":\"FirstName1\",\"LastName\":\"LastName1\"}",
                            Type = "UserCreatedEvent"
                        },
                        new
                        {
                            Id = new Guid("88c44318-728e-4dbf-9e85-890a5367dbac"),
                            AggregateId = new Guid("efa9a19c-a85b-41f5-af21-bb27776986ab"),
                            CreatedAt = new DateTime(2022, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Data = "{\"Id\":\"efa9a19c-a85b-41f5-af21-bb27776986ab\",\"Name\":\"Product1\",\"Price\":1}",
                            Type = "ProductCreatedEvent"
                        },
                        new
                        {
                            Id = new Guid("ebbfe1f8-8ff4-49c9-b49e-fd7754bc95e6"),
                            AggregateId = new Guid("efa9a19c-a85b-41f5-af21-bb27776986ac"),
                            CreatedAt = new DateTime(2022, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Data = "{\"Id\":\"efa9a19c-a85b-41f5-af21-bb27776986ac\",\"Name\":\"Product2\",\"Price\":20}",
                            Type = "ProductCreatedEvent"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
